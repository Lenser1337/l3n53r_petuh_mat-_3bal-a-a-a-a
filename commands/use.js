const Discord = require("discord.js");
const fs = require("fs");
const ms = require("ms");
var mongoose = require("mongoose");
mongoose.Promise = global.Promise;
mongoose.connect(process.env.MONGO_URL);
var User = require('./../schemas/user_model.js');
var Item = require('./../schemas/shop_model.js');
var Gang = require('./../schemas/gang_model.js');

function isNumeric(value) {
	return /^\d+$/.test(value);
}

function drunk(message){
	var user_obj = User.findOne({
		userID: message.member.id
	}, function (err, foundObj) {
		if (err){
			console.log("Error on database findOne: " + err);
		}
		else {
			if (!foundObj)
				console.log("Something stange happend");
			else {
				foundObj.drunk = foundObj.drunk + 1;
				foundObj.save(function(err, updatedObj){
				if(err)
					console.log(err);
				});
				return message.channel.send(`<@${message.member.id}> —É—à—ë–ª –≤ –∑–∞–ø–æ–π üçæ`).then(msg => msg.delete(10000));
			}
		}
	});
}

function set_new_gang_leader(user, message, bot, gangName){
	//setting leadership in user_obj
	var user_obj = User.findOne({userID: message.member.id}, function(err, found_user){
		if (err)
			console.log("WTF there is an error: " + err);
		else {
			if (!user_obj)
				console.log("User not found");
			else {
				found_user.leaderOf = gangName;
				found_user.save(function(err, updatedObj){
					if (err)
						console.log(err);
				});
			}
		}
	});
	//creating a new gang obj in collection
	var membersArray = [];
	var newGang = new Gang({
		name: gangName,
		level: 1,
		welcomeMessage: "",
		balance: 0,
		created: Date.now(),
		leaderID: message.member.id,
		otherMembers: membersArray
	});
	newGang.save()
	.then(item => {
		console.log('New gang added to database!');
	})
	.catch(err => {
		console.log("Error on database save: " + err);
	});

	if(message.guild.available){

		var min = 0;
		var max = 16777215;
		var roleColor = Math.floor(Math.random() * (max - min + 1)) + min;

		//create a new role and give it to the member
		message.guild.createRole({
			name: gangName,
		  color: roleColor,
			hoist: false,
			mentionable: true,
		}).then(role => message.member.addRole(role.id))
		.catch(console.error);
	}
}

function refound_user(user, message, bot){
	console.log("have to add the gang creation item back to the inventory");
	var user_obj = User.findOne({userID: message.member.id}, function(err, found_user){
		if (err)
			console.log("WTF there is an error: " + err);
		else {
			if (!user_obj)
				console.log("User not found");
			else {
				var newinv = user.inv;
				newinv.push("–ö—Ä—ã—à–µ–≤–∞–Ω–∏–µ –≤–∞–Ω–¥–∞–ª–æ–≤ üë•");
				found_user.inv = newinv;
				found_user.save(function(err, updatedObj){
					if (err)
						console.log(err);
				});
			}
		}
	});
}

function create_new_gang(user, message, bot){

	var filter = m => m.author.id === message.author.id;
	var reportChannel = message.guild.channels.find(`name`, "üåòreports_bots");

	message.reply("–∫–∞–∫ —Ö–æ—Ç–µ–ª –±—ã –Ω–∞–∑–≤–∞—Ç—å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É? (–¥–æ 10 —Å–∏–º–≤–æ–ª–æ–≤, —É —Ç–µ–±—è 1 –º–∏–Ω—É—Ç–∞ —á—Ç–æ –±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å)").then(r => r.delete(60000)).catch(function(error) {
	  console.log(error);
	});

	//–ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –≤ –±–∞–∑–µ
	message.channel.awaitMessages(filter, {
		max: 1,
		time: 60000
	}).then(collected => {
		if (collected.first().content.length <= 12 && collected.first().content.length > 2){
			var gangName = collected.first().content; //–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —á–µ–∫–Ω—É—Ç—å —á—Ç–æ –±—ã –±—ã–ª–∏ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã

			var gang_obj = Gang.findOne({name: gangName}, function(err, found_gang){
				if (err)
					console.log("WTF there is an error: " + err);
				else {
					if (!gang_obj)
						console.log("Gang not found");
					else {
						if (found_gang !== null && typeof found_gang !== 'undefined'){
							if (found_gang.name == gangName){
								message.reply("—ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ —É–∂–µ –∑–∞–Ω—è—Ç–æ! –í—ã–±–µ—Ä–∏ –¥—Ä—É–≥–æ–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.");
								return refound_user(user, message, bot);
							}
						}
						else{
							message.reply("—Å–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É **" + gangName + "**? (–¥–∞ / –Ω–µ—Ç)").then(r => r.delete(60000)).catch(function(error) {
								console.log(error);
							});
							message.channel.awaitMessages(filter, {
								max: 1,
								time: 60000
							}).then(collected => {
								if (collected.first().content == "–¥–∞") {
									message.reply("—Ç–µ–ø–µ—Ä—å —Ç—ã –≥–ª–∞–≤–∞ " + gangName + "!");
									console.log("[" + user.highestRole + "] " + user.displayName + " (" + user.userID + ") —Å–æ–∑–¥–∞–ª –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É " + gangName);
									set_new_gang_leader(user, message, bot, gangName);
									reportChannel.send("**" + user.displayName + "** [" + user.userID + "] —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–ª " + gangName);
								}
								else if (collected.first().content == "–Ω–µ—Ç") {
									message.reply("–Ω—É –Ω–µ—Ç —Ç–∞–∫ –Ω–µ—Ç, –≤—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ");
									refound_user(user, message, bot);
								}
								else{
									message.reply("–Ω—É–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å **–¥–∞** –∏–ª–∏ **–Ω–µ—Ç**!");
									refound_user(user, message, bot);
								}
							}).catch(err => {
								message.reply("–≤—Ä–µ–º—è –≤—ã—à–ª–æ 2!");
								refound_user(user, message, bot);
							});
						}
					}
				}
			});
		}
		else if(collected.first().content.length > 12){
			message.reply("—Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ!");
			refound_user(user, message, bot);
		}
		else if(collected.first().content.length <= 2){
			message.reply("—Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ!");
			refound_user(user, message, bot);
		}
	}).catch(err => {
		message.reply("–≤—Ä–µ–º—è –≤—ã—à–ª–æ 1!");
		refound_user(user, message, bot);
	});
}

function useitem(user, item, message, bot){

	var azart = message.guild.roles.find(`name`, "–ê–∑–∞—Ä—Ç–Ω—ã–π –∏–≥—Ä–æ–∫ üé≤");
	var shuler = message.guild.roles.find(`name`, "–®—É–ª–µ—Ä üé±");
	var boost5 = message.guild.roles.find(`name`, "Boost Pack +5% üí∞");
	var kluch = message.guild.roles.find(`name`, "–ö–ª—é—á –æ—Ç 1-–≥–æ –Ω–æ–º–µ—Ä–∞");
	var ubegishe111 = message.guild.roles.find(`name`, '–ñ–∏—Ç–µ–ª—å —É–±–µ–∂–∏—â–∞ "111"');
	var activist = message.guild.roles.find(`name`, "–ê–∫—Ç–∏–≤–∏—Å—Ç üîã");
	var club = message.guild.roles.find(`name`, "üçì–ö–ª—É–±–Ω–∏—á–Ω—ã–π –∫–ª—É–±üçì");
	var koren = message.guild.roles.find(`name`, "–ö–æ—Ä–µ–Ω–Ω–æ–π –∂–∏—Ç–µ–ª—å (lv.35)");
	var boost25 = message.guild.roles.find(`name`, "Boost Pack +25% üí∞");
	var legend50 = message.guild.roles.find(`name`, "–õ–µ–≥–µ–Ω–¥–∞ [50]");
	var boost50 = message.guild.roles.find(`name`, "Boost Pack +50% üí∞");
	var boost75 = message.guild.roles.find(`name`, "Boost Pack +75% üí∞");

	var user_obj = User.findOne({userID: message.member.id}, function(err, found_user){
		if (err)
			console.log("WTF there is an error: " + err);
		else {
			if (!user_obj)
				console.log("User not found");
			else {
				if (item.usable !== true)
					return message.reply("—ç—Ç—É –≤–µ—â—å –Ω–µ–ª—å–∑—è —Ç–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å :thinking:");
				if(item.itemName == "–ß–∏–º–º–∏—á–∞–Ω–≥–∞ ü•ô")
					message.channel.send(`–ú–º–º–º–º... –ö–∞–∫ –≤–∫—É—Å–Ω–æ...`);
				else if (item.itemName == "–°–∏–Ω—Ç –ö–æ–ª–∞ ‚òï")
					message.channel.send(`–ê–π... –ì–æ—Ä—è—á–æ... –ù–æ –≤—Å—ë-—Ä–∞–≤–Ω–æ –≤–∫—É—Å–Ω–æ)`)
				else if (item.itemName == "–î–æ–Ω –ü–µ—Ä–∏–Ω—å–æ–Ω üçæ"){
					message.channel.send(`<@${message.author.id}>, –±—É–ª—å –±—É–ª—å –±—É–ª—å`);
					drunk(message);
				}
				else if (item.itemName == "–ü–æ–∫—É–ø–∫–∞ —Ä–æ–ª–∏: –ê–∑–∞—Ä—Ç–Ω—ã–π –∏–≥—Ä–æ–∫ üé≤"){
					message.member.addRole(azart.id);
					message.channel.send(`<@${message.author.id}>, —Ç—ã –ø–æ–ª—É—á–∏–ª(–∞) —Ä–æ–ª—å –ê–∑–∞—Ä—Ç–Ω—ã–π –∏–≥—Ä–æ–∫ üé≤`);
				}
				else if (item.itemName == "–ü–æ–∫—É–ø–∫–∞ —Ä–æ–ª–∏: –®—É–ª–µ—Ä üé±"){
					message.member.addRole(shuler.id);
					message.channel.send(`<@${message.author.id}>, —Ç—ã –ø–æ–ª—É—á–∏–ª(–∞) —Ä–æ–ª—å –®—É–ª–µ—Ä üé±`);
				}
				else if (item.itemName == "Boost Pack +5% üí∞"){
					message.member.addRole(boost5.id);
					message.channel.send(`<@${message.author.id}>, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è –±—É—Å—Ç –∫ –ø—Ä–∏–±—ã–ª–∏ 5%`);
				}
				else if (item.itemName == "–ö–ª—é—á –æ—Ç –Ω–æ–º–µ—Ä–∞ üîë"){
					message.member.addRole(kluch.id);
					message.channel.send(`<@${message.author.id}>, —Ç—ã –ø–æ–ª—É—á–∏–ª(–∞) –ø–æ–ª—É—á–∏–ª –∫–ª—é—á –æ—Ç 1-–æ–≥–æ –Ω–æ–º–µ—Ä–∞`);
				}
				else if (item.itemName == "–ü—Ä–æ–ø—É—Å–∫ –≤ –£–±–µ–∂–∏—â–µ 111 üí£"){
					message.member.addRole(ubegishe111.id);
					message.channel.send(`<@${message.author.id}>, —Ç–µ–ø–µ—Ä—å —Ç—ã —Å—Ç–∞–ª –∂–∏—Ç–µ–ª–µ–º —É–±–µ–∂–∏—â–∞ "111"`);
				}
				else if (item.itemName == "–ü–æ–∫—É–ø–∫–∞ —Ä–æ–ª–∏: **–ê–∫—Ç–∏–≤–∏—Å—Ç** üîã"){
					message.member.addRole(activist.id);
					message.channel.send(`<@${message.author.id}>, —Ç—ã –ø–æ–ª—É—á–∏–ª(–∞) —Ä–æ–ª—å **–ê–∫—Ç–∏–≤–∏—Å—Ç** üîã`);
				}
				else if (item.itemName == "–ö–ª—é—á –∫ –ö–ª—É–±–Ω–∏—á–Ω–æ–º—É —á–∞—Ç—É üçì"){
					message.member.addRole(club.id);
					message.channel.send(`<@${message.author.id}>, —Ç—ã –ø–æ–ª—É—á–∏–ª(–∞) —Ä–æ–ª—å üçì–ö–ª—É–±–Ω–∏—á–Ω—ã–π –∫–ª—É–±üçì`);
				}
				else if (item.itemName == "–ü–æ–∫—É–ø–∫–∞ —Ä–æ–ª–∏: **–ö–æ—Ä–µ–Ω–Ω–æ–π –∂–∏—Ç–µ–ª—å (lv.35)**"){
					message.member.addRole(koren.id);
					message.channel.send(`<@${message.author.id}>, —Ç—ã –ø–æ–ª—É—á–∏–ª(–∞) —Ä–æ–ª—å –ö–æ—Ä–µ–Ω–Ω–æ–π –∂–∏—Ç–µ–ª—å (lv.35)`);
				}
				else if (item.itemName == "Boost Pack +25% üí∞"){
					message.member.addRole(boost25.id);
					message.channel.send(`<@${message.author.id}>, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è –±—É—Å—Ç –∫ –ø—Ä–∏–±—ã–ª–∏ 25%`);
				}
				else if (item.itemName == "–ü–æ–∫—É–ø–∫–∞ —Ä–æ–ª–∏: **–õ–µ–≥–µ–Ω–¥–∞ (lv.50)**"){
					message.member.addRole(legend50.id);
					message.channel.send(`<@${message.author.id}>, —Ç—ã –ø–æ–ª—É—á–∏–ª(–∞) —Ä–æ–ª—å –õ–µ–≥–µ–Ω–¥–∞ (lv.50)`);
				}
				else if (item.itemName == "Boost Pack +50% üí∞"){
					message.member.addRole(boost50.id);
					message.channel.send(`<@${message.author.id}>, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è –±—É—Å—Ç –∫ –ø—Ä–∏–±—ã–ª–∏ 50%`);
				}
				else if (item.itemName == "Boost Pack +75% üí∞"){
					message.member.addRole(boost75.id);
					message.channel.send(`<@${message.author.id}>, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è –±—É—Å—Ç –∫ –ø—Ä–∏–±—ã–ª–∏ 75%`);
				}
				else if (item.itemName == "–ö—Ä—ã—à–µ–≤–∞–Ω–∏–µ –≤–∞–Ω–¥–∞–ª–æ–≤ üë•"){
					create_new_gang(user, message, bot);
				}
				else {
					message.reply("—Ç—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ (–ø–æ—á—Ç–∏) —é–∑–∞–Ω—É–ª " + item.itemName);
					var fakeuse = true;
				}
				var index = user.inv.indexOf(item.itemName);
				var newinv = user.inv;
				if (!fakeuse)
					newinv.splice(index, 1);
				found_user.inv = newinv;
				found_user.save(function(err, updatedObj){
					if (err)
						console.log(err);
				});
			}
		}
	});
}

module.exports.run = async (bot, message, args) => {

	var shop_channel = message.guild.channels.find(`name`, "üí∏–æ—Å–Ω–æ–≤–Ω–æ–µ_—ç–∫–æ–Ω–æ–º–∏–∫–∞");

	if (message.channel.name != "üí∏–æ—Å–Ω–æ–≤–Ω–æ–µ_—ç–∫–æ–Ω–æ–º–∏–∫–∞" && message.channel.name != "üåégeneral_bots" && message.channel.name != "üïµ—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_—á–∞—Ç" && message.channel.name != "üç≤–∫–æ–º–Ω–∞—Ç–∞_–æ—Ç–¥—ã—Ö–∞"){
		message.delete(3000);
		return message.reply(`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–µ—â–∏ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ ${shop_channel}`).then(msg => msg.delete(10000));
	}

	//message.delete().catch(O_o=>{});

	//–∏—â–µ–º –µ—Å—Ç—å –ª–∏ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–µ—Ç—Å—è —á—Ç–æ –ª–∏–±–æ –∫—É–ø–∏—Ç—å, —É –Ω–∞—Å –≤ –±–∞–∑–µ
	var user_obj = await User.findOne({userID: message.member.id}, function(err, found_user){});

	if (typeof user_obj === 'undefined' || user_obj === null)
		return message.reply("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ");

	//–ø–∞—Ä—Å–∏–º —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ –ø—ã—Ç–∞–µ—Ç—Å—è —é–∑–∞–Ω—É—Ç—å
	var item = message.content.split(" ").toString();
	var to_cut = item.indexOf(",");
	item = item.slice(to_cut + 1);
	item = item.replace(/,/g, " ");
	item = item.replace(/\s\s+/g, ' ');

	//–ü–æ–∏—Å–∫ –¥–∞–Ω–Ω–æ–π –≤–µ—â–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ (–¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –∑–Ω–∞—Ç—å —é–∑–∞–±–µ–ª–µ–Ω –ª–∏ —ç—Ç–æ—Ç –∏—Ç–µ–º)
	var item_obj = await Item.findOne({itemName: item}, function(err, found_item){});

	if (typeof item_obj === 'undefined' || item_obj === null)
		return message.reply("—ç—Ç–æ–π –≤–µ—â–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç—É –≤ –º–∞–≥–∞–∑–∏–Ω–µ");

	//–∏—â–µ–º –µ—Å—Ç—å –ª–∏ —É —á–µ–ª–æ–≤–µ–∫–∞ —ç—Ç–æ—Ç –∏—Ç–µ–º

	if (user_obj.inv.includes(item) == false)
		return message.reply(`—É —Ç–µ–±—è –Ω–µ—Ç—É ${item}`);
	else
		useitem(user_obj, item_obj, message);
}

module.exports.help = {
	name: "use"
}
