const Discord = require("discord.js");
const fs = require("fs");
const ms = require("ms");
var mongoose = require("mongoose");
mongoose.Promise = global.Promise;
mongoose.connect(process.env.MONGO_URL);
var User = require('./../schemas/user_model.js');

function random(min, max) {
	var result = Math.floor(Math.random() * (max - min + 1)) + min;
	return (result);
}

function isNumeric(value) {
	return /^\d+$/.test(value);
}

// function sendToPn(age, gameName, vchannel, userComment){
//   var pnchannel = message.guild.channels.find(`name`, "üëã–ø–æ–∏—Å–∫_–Ω–∞–ø–∞—Ä–Ω–∏–∫–æ–≤");
//
//   const embed = new Discord.RichEmbed()
//   .setTitle(`${message.member.displayName} –∏—â–µ—Ç —Å–µ–±–µ –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞.`)
//   .setColor("#35885C")
//   .addField("–í–æ–∑—Ä–∞—Å—Ç:", age, true)
//   .addField("–ò–≥—Ä–∞:", gameName, true)
//   .addField("–ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞:", vchannel, true)
//   .addField("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", userComment, true)
//
//   pnchannel.send({embed});
// }

module.exports.run = async (bot, message, args) => {

	var filter = m => m.author.id === message.member.id;

	if (message.member == null)
		return;

	message.delete().catch(O_o=>{});

	var dmChannel = message.member.createDM().then(function(dmChannel){
		var user_obj = User.findOne({
			userID: message.member.id
		}, function (err, foundObj) {
			if (err){
				console.log("Error on database findOne: " + err);
			}
			else {
				if (!foundObj)
					console.log("Something stange happend");
				else {
					var dateTime = Date.now();
					if(!foundObj.lastFind){
						firstdate = Math.floor(dateTime/1000) - 300;
						foundObj.lastFind = Math.floor(firstdate*1000);
						console.log(`–Æ–∑–µ—Ä—É ${message.member.displayName} –æ–±–Ω–æ–≤–ª–µ–Ω lastFind`);
					}
					if(!foundObj.findOpen){
						foundObj.findOpen = false;
					}
					var timestamp = Math.floor(dateTime/1000);
					var timestampLimit = Math.floor(foundObj.lastFind/1000) + 300;

					if (timestampLimit <= timestamp && foundObj.findOpen == false){
						foundObj.findOpen = true;
						dmChannel.send(`–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–µ–±–µ –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞ –¥–ª—è –∏–≥—Ä—ã –≤ PVE –æ—Ç–≤–µ—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤.`);
						dmChannel.send(`–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?`);
						//--------------------------------------------//
						dmChannel.awaitMessages(filter, {
						  max: 1,
						  time: 300000
						}).then(collected => {
						  var age = collected.first().content;
						  if (isNumeric(age)) {
						    dmChannel.send(`–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –ª–æ–∫–∞—Ü–∏–∏ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å:`);
								dmChannel.send(`1 - **–ö–∞–º–Ω–µ–ª–µ—Å—å–µ**,2 - **–ü–ª–∞–Ω–∫–µ—Ä—Ç–æ–Ω**,3 - **–í–µ—â–∞—è –¥–∞–ª–∏–Ω–∞**,4 - **–õ–∏–Ω—á-–ü–∏–∫—Å**`);
						    //--------------------------------------------//
						    dmChannel.awaitMessages(filter, {
						      max: 1,
						      time: 300000
						    }).then(collected => {
						      var gamenum = collected.first().content;
									if(gamenum == "1"){
										var embedcolor = "#2DA3FF";
										var gamename = "–ö–∞–º–Ω–µ–ª–µ—Å—å–µ";

									}else if(gamenum == "2"){
										var embedcolor = "#FFB30F";
										var gamename = "–ü–ª–∞–Ω–∫–µ—Ä—Ç–æ–Ω";

									}else if(gamenum == "3"){
										var embedcolor = "#DB2219";
										var gamename = "–í–µ—â–∞—è –¥–∞–ª–∏–Ω–∞";

									}else if(gamenum == "4"){
										var embedcolor = "#464646";
										var gamename = "–õ–∏–Ω—á-–ü–∏–∫—Å";

									}else{
										foundObj.findOpen = false;
										dmChannel.send(`–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑. –ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –ª–æ–∫–∞—Ü–∏–∏ –æ—Ç 1 –¥–æ 4.`);
										return foundObj.save(function(err, updatedObj){if(err)console.log(err)});
									}
									var img = random(1,3);
									var img = `https://retrobotproject.herokuapp.com/images/PVE${img}.png`;

									dmChannel.send(`–¢–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:`);
									dmChannel.awaitMessages(filter, {
										max: 1,
										time: 300000
									}).then(collected => {
										if (message.member.voiceChannel){
											var comment = collected.first().content;
											var pnchannel = message.guild.channels.find(`name`, "üåçpve_–Ω–∞–ø–∞—Ä–Ω–∏–∫–∏");
											var userAvatar = message.member.user.avatarURL;
											const embed = new Discord.RichEmbed()
											.setTitle(`${message.member.displayName} –∏—â–µ—Ç –Ω–∞–ø–∞—Ä–Ω–∏–∫–æ–≤!`)
											.setColor(embedcolor)
											.addField("–í–æ–∑—Ä–∞—Å—Ç:", age, true)
											.addField("–õ–æ–∫–∞—Ü–∏—è:", gamename, true)
											.addField("–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª:", message.member.voiceChannel.name, true)
											.addField("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", comment, true)
											.addField("–ù–∏–∫:", `<@${message.member.id}>`, true)
											.setThumbnail(img)
											pnchannel.send({embed});
										}
										else{
											var comment = collected.first().content;
											var pnchannel = message.guild.channels.find(`name`, "üëã–ø–æ–∏—Å–∫_–Ω–∞–ø–∞—Ä–Ω–∏–∫–æ–≤");
											var userAvatar = message.member.user.avatarURL;
											const embed = new Discord.RichEmbed()
											.setTitle(`${message.member.displayName} –∏—â–µ—Ç –Ω–∞–ø–∞—Ä–Ω–∏–∫–æ–≤!`)
											.setColor(embedcolor)
											.addField("–í–æ–∑—Ä–∞—Å—Ç:", age, true)
											.addField("–õ–æ–∫–∞—Ü–∏—è:", gamename, true)
											.addField("–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª:", "-", true)
											.addField("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", comment, true)
											.addField("–ù–∏–∫:", `<@${message.member.id}>`, true)
											.setThumbnail(img)
											pnchannel.send({embed});
										}

										dmChannel.send(`–¢–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ñ–¥–∏ —Å–≤–æ–∏—Ö –±—É–¥—É—â–∏—Ö –Ω–∞–ø–∞—Ä–Ω–∏–∫–æ–≤!`);
										foundObj.lastFind = Date.now();
										foundObj.findOpen = false;
										foundObj.save(function(err, updatedObj){
										if(err)
											console.log(err);
										});
									}).catch(err => {
										foundObj.findOpen = false;
										dmChannel.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ, —Ç—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å!");
										foundObj.save(function(err, updatedObj){if(err)console.log(err)});
									});
						    }).catch(err => {
									foundObj.findOpen = false;
						      dmChannel.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ, —Ç—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å!");
									foundObj.save(function(err, updatedObj){if(err)console.log(err)});
						    });
						  }
						  else{
								foundObj.findOpen = false;
								dmChannel.send("–í–≤–µ–¥–∏ —á–∏—Å–ª–æ!");
								foundObj.save(function(err, updatedObj){if(err)console.log(err)});
						  }
						}).catch(err => {
							foundObj.findOpen = false;
						  dmChannel.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ, —Ç—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å!");
							foundObj.save(function(err, updatedObj){if(err)console.log(err)});
						});
					}
					else if(timestampLimit <= timestamp && foundObj.findOpen == true) {
							dmChannel.send("–£ —Ç–µ–±—è —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞ –∞–Ω–∫–µ—Ç–∞!");
					}
					else {
						dmChannel.send("–¢—ã –º–æ–∂–µ—à—å –∏—Å–∫–∞—Ç—å –Ω–∞–ø–∞—Ä–Ω–∏–∫–æ–≤ —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ 5 –º–∏–Ω—É—Ç! –ü–æ–¥–æ–∂–¥–∏ –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ –∏ –∫ —Ç–µ–±–µ –Ω–µ–ø—Ä–µ–º–µ–Ω–Ω–æ –∫—Ç–æ-—Ç–æ –∑–∞–π–¥–µ—Ç!");
					}
				}
			}
		});
	}).catch(function(error){
		console.log(error);
	});
}

module.exports.help = {
  name: "find"
}
