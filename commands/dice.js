const Discord = require("discord.js");
const fs = require("fs");
const ms = require("ms");
var mongoose = require("mongoose");
mongoose.Promise = global.Promise;mongoose.connect(process.env.MONGO_URL);
var User = require('./../schemas/user_model.js');

function isNumeric(value) {
	return /^\d+$/.test(value);
}

module.exports.run = async (bot, message, args) => {

	var retricIcon = bot.emojis.find("name", "retric");
	var nopeIcon = bot.emojis.find("name", "nope");

	if (isNumeric(args[0]) && isNumeric(args[1])){
		var user_obj = User.findOne({
			userID: message.member.id
		}, function (err, foundObj) {
			if (err)
				console.log("Error on database findOne: " + err);
			else {
				if (!foundObj)
					console.log("Something stange happend");
				else {
					var dateTime = Date.now();
					var timestamp = Math.floor(dateTime/1000);
					var timestampLimit = Math.floor(foundObj.lastDice/1000) + 30;
					if (timestampLimit > timestamp)
						return message.reply("—ç—ç—ç, –∫—Ä—É—Ç–∏-–≤–µ—Ä—Ç–∏, –Ω–æ –Ω–µ —á–∞—â–µ, —á–µ–º —Ä–∞–∑ –≤ –ø–æ–ª –º–∏–Ω—É—Ç—ã...");
					if (Number(args[0]) >= 100 && Number(args[1]) >= 1 && Number(args[1]) <= 6){
						var actCash = foundObj.retrocoinCash;
						var toPlay = Number(args[0]);
						var winner = false;
						if (actCash - toPlay >= 0){
							var newCash = actCash - toPlay;
							var min = 1;
  							var max = 6;
  							var result = Math.floor(Math.random() * (max - min + 1)) + min;
  							if (result == Number(args[1])){
  								newCash = toPlay * 6 + actCash;
  								winner = true;
  								var won = toPlay * 6;
  							}
  							foundObj.retrocoinCash = newCash;
							foundObj.retrocoinTotal = newCash + foundObj.retrocoinBank;
							foundObj.lastDice = Date.now();
							foundObj.save(function(err, updatedObj){
							if(err)
								console.log(err);
							});
							message.channel.send("–ó–∞–∫–∏–¥—ã–≤–∞—é üé≤ ...");
							setTimeout(function(){
								if (winner == true){
									return message.channel.send(`...–∏ –≤—ã–ª–µ—Ç–∞–µ—Ç ${result}! ${message.author}, —Ç—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã–∏–≥—Ä–∞–ª ${won}${retricIcon}! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é :drum:`);
								}
								else
									return message.channel.send("...–∏ –≤—ã–ª–µ—Ç–∞–µ—Ç " + result + "! –ù—É –Ω–∏—á–µ–≥–æ, –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ –ø–æ–≤–µ–∑–µ—Ç –±–æ–ª—å—à–µ :stuck_out_tongue_winking_eye:");
						    }, 3000);
  						}
  						else
  							return message.reply("–≤–∏–¥–∏–º–æ —É —Ç–µ–±—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Ç—Ä–∏–∫–æ–≤ –Ω–∞ —Ä—É–∫–∞—Ö :dark_sunglasses:");
					}
					else if (Number(args[0]) < 100)
						return message.reply("–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - 100 —Ä–µ—Ç—Ä–∏–∫–æ–≤!");
					else if (Number(args[1]) < 1 || Number(args[1]) > 6)
						return message.reply(`—É –∫—É–±–∞ –≤—Å–µ–≥–æ 6 —Å—Ç–æ—Ä–æ–Ω, –¥—è–¥—è ${nopeIcon}`);
				}
			}
		});
	}
	else if (!args[0])
		return message.reply("—É–∫–∞–∂–∏ —Å—Ç–∞–≤–∫—É –∏ —Ç–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑!");
	else if (!args[1])
		return message.reply("–Ω–∞ —á—Ç–æ —Å—Ç–∞–≤–∏—Ç—å –±—É–¥–µ–º? –û—Ç 1 –¥–æ 6...");
}

module.exports.help = {
	name: "dice"
}
