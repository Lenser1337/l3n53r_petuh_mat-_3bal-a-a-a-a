const Discord = require("discord.js");
const fs = require("fs");
const ms = require("ms");
var mongoose = require("mongoose");

mongoose.Promise = global.Promise;mongoose.connect(process.env.MONGO_URL);

var Warn = require('./../schemas/warn_model.js');
var User = require('./../schemas/user_model.js');
var Report = require('./../schemas/report_model.js');

//tempmute @member Time

function formatDate(date) {
  var monthNames = [
    "—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞",
    "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è", "–∏—é–ª—è",
    "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è",
    "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"
  ];

  var day = date.getDate();
  var monthIndex = date.getMonth();
  var year = date.getFullYear();
  var hour = date.getHours();
  var minute = date.getMinutes();
  var second = date.getSeconds();
  var time = hour + ":" + minute + ":" + second;

  return day + ' ' + monthNames[monthIndex] + ' ' + year + ', ' + time;
}

module.exports.run = async (bot, message, args) => {

  console.log('warn');
  var wutIcon = bot.emojis.find("name", "wut");

  let reason = "";
  reason = args.join(" ").slice(22);
  let wUser = message.guild.member(message.mentions.users.first()) || message.guild.members.get(args[0]);
  let muterole = message.guild.roles.find(`name`, "–ù–∞—Ä—É—á–Ω–∏–∫–∏ (–ú—É—Ç —á–∞—Ç–∞)");
  let mutetime = "";
  let warnchannel = message.guild.channels.find(`name`, "üåòreports_bots");
  let errorschannel = message.guild.channels.find(`name`, "üåèerrors_bots");

  if(reason === "")
    return message.reply("—É–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É!");
  if(!message.member.hasPermission("MOVE_MEMBERS"))
    return message.reply("–ø–æ–≥–æ–¥–∏-–∫–∞, —É —Ç–µ–±—è –Ω–µ—Ö–≤–∞—Ç–∫–∞ –ø—Ä–∞–≤ :eyes:");
  if(!wUser)
    return message.reply(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ${wutIcon}`);
  if(wUser.hasPermission("MOVE_MEMBERS"))
    return message.reply(`–Ω–µ, —ç—Ç–æ–≥–æ –¥—è–¥—å–∫—É –∑–∞–≤–∞—Ä–Ω–∏—Ç—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ${wutIcon}`);
  if(!muterole)
    return errorschannel.send("—Ä–æ–ª—å –¥–ª—è –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
  if(!errorschannel)
    return message.channel.send("–ö–∞–Ω–∞–ª –æ—à–∏–±–æ–∫ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
  if(!warnchannel)
    errorschannel.send("–ö–∞–Ω–∞–ª —Ä–µ–ø–æ—Ä—Ç–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
  if(!warnchannel)
    return message.channel.send("–ö–∞–Ω–∞–ª —Ä–µ–ø–æ—Ä—Ç–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");

  var myData = new Warn({
    userID: wUser.id,
    userNickname: wUser.displayName,
    warnedFor: reason,
    moderatorID: message.member.id,
    moderatorNickname: message.member.displayName,
    when: Date.now(),
    channelID: message.channel.id,
    channelName: message.channel.name,
    warnedVia: "RetroBot"
  });

  myData.save()
  .then(item => {
  })
  .catch(err => {
    console.log("Error: " + err);
  });

  let moder = message.member;
  var user_obj = Report.findOne({
  	moderID: moder.id
  }, function (err, foundObj) {
  	if (err)
  		console.log("Error on database findOne: " + err);
  	else {
  		if (foundObj === null){
  			var myData = new Report({
  				moder: moder.username,
  				moderID: moder.id,
          infractionsAmount: 0,
          warnsAmount: 1,
          muteAmount: 0,
          voicemuteAmount: 0,
  			});
  			myData.save()
  			.then(item => {
  			})
  			.catch(err => {
  				console.log("Error on database save: " + err);
  			});
  		} else {
        if (!foundObj)
          return console.log("Something stange happend");
        var newWarnsAmount = foundObj.warnsAmount + 1;
        foundObj.warnsAmount = newWarnsAmount;
        foundObj.save(function(err, updatedObj){
          if(err)
            console.log(err);
        });
    	}
    }
  });

  var user_obj = User.findOne({
    userID: wUser.id
  }, async function (err, foundObj) {
    if (err)
      console.log("Error on database findOne: " + err);
    else {
      if (!foundObj)
        console.log("Something stange happend");
      else {
        var actInfractions = foundObj.infractions;
        var newInfractions = actInfractions + 1;

        foundObj.infractions = newInfractions;
        foundObj.save(function(err, updatedObj){
          if(err)
            console.log(err);
        });

        let sicon = message.guild.iconURL;

        const embed = new Discord.RichEmbed()
        .setTitle(":star: –û—Ç—á–µ—Ç –æ –≤–∞—Ä–Ω–µ :star:")
        .setColor("#fc6400")
        .addField("–ñ–µ—Ä—Ç–≤–∞", `<@${wUser.id}>`, true)
        .addField("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–æ –≤", message.channel, true)
        .addField("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–ª", message.member, true)
        .addField("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π —É –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è", newInfractions, true)
        .addField(`–í—Ä–µ–º—è –≤—ã–¥–∞—á–∏ –≤–∞—Ä–Ω–∞:`, formatDate(new Date()), true)
        .addField("–ü—Ä–∏—á–∏–Ω–∞", reason, true);

        warnchannel.send({embed});

        if(newInfractions == 1){
          message.channel.send(`<@${wUser.id}>` + " –ø–æ–ª—É—á–∏–ª —Å–≤–æ–µ –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –ù–µ –Ω–∞—Ä—É—à–∞–π –±–æ–ª—å—à–µ!");
        }
        else{
        switch (newInfractions) {
          case 2:
            mutetime = "5m";
            break;
          case 3:
            mutetime = "10m";
          case 4:
            mutetime = "20m";
          default:
            mutetime = "30m";
        }

        var user_obj = User.findOne({
          userID: wUser.id
        }, function (err, foundObj) {

        var timestamp = new Date().getTime();
        var mutedUntil = new Date();

        mutedUntil.setTime(timestamp + ms(mutetime));

        foundObj.mutedUntil = mutedUntil;
        foundObj.save(function(err, updatedObj){
          if(err)
            console.log(err);
          });
        });
        wUser.addRole(muterole.id);
        message.channel.send(`<@${wUser.id}>` + " –ø–æ—Å–∏–¥–∏—Ç " + mutetime + ",  –ø–æ–¥—É–º–∞–µ—Ç...");
       }
     }
    }
  });
}

module.exports.help = {
  name: "warn"
}
