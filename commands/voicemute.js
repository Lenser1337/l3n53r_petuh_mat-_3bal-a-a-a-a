const Discord = require("discord.js");
const fs = require("fs");
const ms = require("ms");
var mongoose = require("mongoose");

mongoose.Promise = global.Promise;mongoose.connect(process.env.MONGO_URL);

var Warn = require('./../schemas/warn_model.js');
var User = require('./../schemas/user_model.js');
var Report = require('./../schemas/report_model.js');
var Infraction = require('./../schemas/infractions_model.js');
var Warn = require('./../schemas/warn_model.js');
var Voicemute = require('./../schemas/voicemute_model.js');

function formatDate(date) {
  var monthNames = [
    "—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞",
    "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è", "–∏—é–ª—è",
    "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è",
    "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"
  ];

  var day = date.getDate();
  var monthIndex = date.getMonth();
  var year = date.getFullYear();
  var hour = date.getHours();
  var minute = date.getMinutes();
  var second = date.getSeconds();
  var time = hour + ":" + minute + ":" + second;

  return day + ' ' + monthNames[monthIndex] + ' ' + year + ', ' + time;
}

module.exports.run = async (bot, message, args) => {

  var moder = message.member;

  var wutIcon = bot.emojis.find("name", "wut");

  let tovmute = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
  let vmutetime = args[1];
  let vmreason = args.join(" ").slice(22);
  let repchannel = message.guild.channels.find(`name`, "üåòreports_bots");
  let errorschannel = message.guild.channels.find(`name`, "üåèerrors_bots");

  //–ª–∏–º–∏—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –≤–æ –≤—Å–µ –∫–æ–º–º–∞–Ω–¥—ã —á—Ç–æ –±—ã –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª
  if(!message.member.hasPermission("MANAGE_MESSAGES"))
    return;
  if(!message.member.hasPermission("MOVE_MEMBERS", "ADMINISTRATOR"))
    return message.channel.send(`–ü–æ—Ö–æ–∂–µ —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞ —ç—Ç–æ –ø—Ä–∞–≤, –¥—Ä—É–∂–∏—â–µ ${wutIcon}`);
  if(!tovmute)
    return message.reply("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
  if(tovmute.hasPermission("MANAGE_ROLES"))
    return message.reply("—ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–º—É—á–µ–Ω!");
  if(!vmutetime)
    return message.reply("–≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤—Ä–µ–º—è –º—É—Ç–∞!");
  if(!errorschannel)
  	return message.channel.send("–ö–∞–Ω–∞–ª –æ—à–∏–±–æ–∫ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
	if(!repchannel)
		errorschannel.send("–ö–∞–Ω–∞–ª —Ä–µ–ø–æ—Ä—Ç–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
  if(!repchannel)
  	return message.channel.send("–ö–∞–Ω–∞–ª —Ä–µ–ø–æ—Ä—Ç–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");


    const embed = new Discord.RichEmbed()
    .setTitle(":star: –û—Ç—á–µ—Ç –æ –≤–æ–π—Å–º—É—Ç–µ :star:")
    .setColor("#fc6400")
    .addField("–ñ–µ—Ä—Ç–≤–∞", `<@${tovmute.id}>`, true)
    .addField("–ú—É—Ç –≤—ã–¥–∞–Ω –≤", message.channel, true)
    .addField(`–í—Ä–µ–º—è –≤—ã–¥–∞—á–∏ –≤–æ–π—Å–º—É—Ç–∞`, formatDate(new Date()), true)
    .addField("–ú—É—Ç –≤—ã–¥–∞–ª", message.member, true)
    .addField("–ü—Ä–∏—á–∏–Ω–∞", vmreason, true);

    repchannel.send({embed});

  await(tovmute.setMute(true));

  message.channel.send(`–ü–æ–Ω—è–ª, –ø—Ä–∏–Ω—è–ª! <@${tovmute.id}> —Ç–µ–ø–µ—Ä—å –Ω–µ–º–æ–π –Ω–∞ ${ms(ms(vmutetime))}! :ok_hand:`);

  setTimeout(function(){
      tovmute.setMute(false);
      repchannel.send(`<@${tovmute.id}> —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å!`);
  }, ms(vmutetime));

  var iData = new Voicemute({
    userID: tovmute.id,
    userNickname: tovmute.displayName,
    vmutedFor: vmreason,
    moderatorID: message.member.id,
    moderatorNickname: message.member.displayName,
    when: Date.now(),
    channelID: message.channel.id,
    channelName: message.channel.name,
  });

  iData.save()
  .then(item => {
  })
  .catch(err => {
    console.log("Error: " + err);
  });

  var user_obj = Report.findOne({
    moderID: moder.id
  }, function (err, foundObj) {
    if (err)
      console.log("Error on database findOne: " + err);
    else {
      if (foundObj === null){
        var myData = new Report({
          moder: moder.displayName,
          moderID: moder.id,
          infractionsAmount: 0,
          warnsAmount: 0,
          muteAmount: 0,
          voicemuteAmount: 1,
        });
        myData.save()
        .then(item => {
        })
        .catch(err => {
          console.log("Error on database save: " + err);
        });
      } else {
        if (!foundObj)
          return console.log("Something stange happend");
        foundObj.voicemuteAmount = foundObj.voicemuteAmount + 1;
        foundObj.save(function(err, updatedObj){
          if(err)
            console.log(err);
        });
      }
    }
  });
}

module.exports.help = {
  name: "voicemute"
}
