const Discord = require("discord.js");
const fs = require("fs");
const ms = require("ms");
var mongoose = require("mongoose");

mongoose.Promise = global.Promise;mongoose.connect(process.env.MONGO_URL);

var Warn = require('./../schemas/warn_model.js');
var User = require('./../schemas/user_model.js');
var Report = require('./../schemas/report_model.js');
var Infraction = require('./../schemas/infractions_model.js');
var Warn = require('./../schemas/warn_model.js');
var Tempmute = require('./../schemas/tempmute_model.js');


function formatDate(date) {
  var monthNames = [
    "—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞",
    "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è", "–∏—é–ª—è",
    "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è",
    "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"
  ];

  var day = date.getDate();
  var monthIndex = date.getMonth();
  var year = date.getFullYear();
  var hour = date.getHours();
  var minute = date.getMinutes();
  var second = date.getSeconds();
  var time = hour + ":" + minute + ":" + second;

  return day + ' ' + monthNames[monthIndex] + ' ' + year + ', ' + time;
}

module.exports.run = async (bot, message, args) => {

  var moder = message.member;

  let tomute = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
  let muterole = message.guild.roles.find(`name`, "–ù–∞—Ä—É—á–Ω–∏–∫–∏ (–ú—É—Ç —á–∞—Ç–∞)");
  let mutetime = args[1];
  let mreason = args.join(" ").slice(22);
  let repchannel = message.guild.channels.find(`name`, "üåòreports_bots");
  let errorschannel = message.guild.channels.find(`name`, "üåèerrors_bots");

  if(!message.member.hasPermission("MOVE_MEMBERS", "ADMINISTRATOR"))
    return message.channel.send("–ü–æ—Ö–æ–∂–µ —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞ —ç—Ç–æ –ø—Ä–∞–≤, –¥—Ä—É–∂–∏—â–µ :thinking:. ");
  if(!tomute)
    return message.reply("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
  if(tomute.hasPermission("MANAGE_MESSAGES"))
    return message.reply("—ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–º—É—á–µ–Ω!");
  if(!muterole)
    return errorschannel.send("–†–æ–ª—å –º—É—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
  if(!mutetime)
    return message.reply("–≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤—Ä–µ–º—è –º—É—Ç–∞!");
  if(!errorschannel)
    return message.channel.send("–ö–∞–Ω–∞–ª –æ—à–∏–±–æ–∫ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
  if(!repchannel)
    return message.channel.send("–ö–∞–Ω–∞–ª —Ä–µ–ø–æ—Ä—Ç–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
  await(tomute.addRole(muterole.id));

  message.channel.send(`–ü–æ–Ω—è–ª, –ø—Ä–∏–Ω—è–ª! <@${tomute.id}> –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ ${ms(ms(mutetime))}`);

  const embed = new Discord.RichEmbed()
  .setTitle(":star: –û—Ç—á–µ—Ç –æ –º—É—Ç–µ :star:")
  .setColor("#fc6400")
  .addField("–ñ–µ—Ä—Ç–≤–∞", `<@${tomute.id}>`, true)
  .addField("–ú—É—Ç –≤—ã–¥–∞–Ω –≤", message.channel, true)
  .addField("–ú—É—Ç –≤—ã–¥–∞–ª", message.member, true)
  .addField(`–í—Ä–µ–º—è –≤—ã–¥–∞—á–∏ –º—É—Ç–∞:`, formatDate(new Date()), true)
  .addField("–ü—Ä–∏—á–∏–Ω–∞:", mreason, true);

  repchannel.send({embed});

  setTimeout(function(){
    if(tomute.roles.has(muterole.id)){
      tomute.removeRole(muterole.id);
      repchannel.send(`<@${tomute.id}> –±—ã–ª —Ä–∞–∑–º—É—á–µ–Ω!`);
    }
  }, ms(mutetime));

  var iData = new Tempmute({
    userID: tomute.id,
    userNickname: tomute.displayName,
    tmutedFor: mreason,
    moderatorID: message.member.id,
    moderatorNickname: message.member.displayName,
    when: Date.now(),
    channelID: message.channel.id,
    channelName: message.channel.name,
  });

  iData.save()
  .then(item => {
  })
  .catch(err => {
    console.log("Error: " + err);
  });

  var user_obj = User.findOne({
    userID: tomute.id
  }, function (err, foundObj) {

    var mute = Date.now() + ms(ms(mutetime));

    if (foundObj === null){
      var myData = new User({
        userID: tomute.id,
        displayName: tomute.displayName,
        highestRole: tomute.highestRole.name,
        joinedAt: tomute.joinedAt,
        messages: 1,
        infractions: 0,
        retrocoinCash: 0,
        retrocoinBank: 0,
        retrocoinTotal: 0,
        kissed: 0,
        huged: 0,
        fcked: 0,
        hit: 0,
        killed: 0,
        drunk: 0,
        status: "__–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω__",
        mute: mute,
        lastScan: Date.now()
      });
      myData.save()
      .then(item => {
        console.log('New user "' + tomute.displayName + '" added to database');
      })
      .catch(err => {
        console.log("Error on database save: " + err);
      });
    }
    else{
     foundObj.mute = mute;
    }
  });

  var user_obj = Report.findOne({
    moderID: moder.id
  }, function (err, foundObj) {
    if (err)
      console.log("Error on database findOne: " + err);
    else {
      if (foundObj === null){
        var myData = new Report({
					moder: moder.displayName,
					moderID: moder.id,
          infractionsAmount: 0,
          warnsAmount: 0,
          muteAmount: 1,
          voicemuteAmount: 0,
        });
        myData.save()
        .then(item => {
        })
        .catch(err => {
          console.log("Error on database save: " + err);
        });
      } else {
        if (!foundObj)
          return console.log("Something stange happend");

        foundObj.muteAmount = foundObj.muteAmount + 1;
        foundObj.save(function(err, updatedObj){
          if(err)
            console.log(err);
        });
      }
    }
  });
}

module.exports.help = {
  name: "tempmute"
}
