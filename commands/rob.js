const Discord = require("discord.js");
const fs = require("fs");
const ms = require("ms");
var mongoose = require("mongoose");
mongoose.Promise = global.Promise;mongoose.connect(process.env.MONGO_URL);
var User = require('./../schemas/user_model.js');

function isNumeric(value) {
	return /^\d+$/.test(value);
}

function rob(message, bot, toRob, robResult, robed){

	var retricIcon = bot.emojis.find("name", "retric");

	var user_obj = User.findOne({
		userID: message.member.id
	}, function (err, foundObj) {
		if (err){
			console.log("Error on database findOne: " + err);
		}
		else {
			if (!foundObj)
				console.log("Something stange happend");
			else {
				var newCash = 0;
				if (robResult == true)
					newCash = foundObj.retrocoinCash + toRob;
				else {
					newCash = foundObj.retrocoinCash - toRob;
				}
				foundObj.retrocoinCash = newCash;
				foundObj.retrocoinTotal = foundObj.retrocoinBank + newCash;
				foundObj.lastRob = Date.now();
				foundObj.save(function(err, updatedObj){
					if(err)
						console.log(err);
				});
				if(robResult == true)
					return message.reply(`—Ç—ã —Å–≤–∏—Å—Ç–Ω—É–ª —É ${robed} ${toRob}${retricIcon}!`);
				else
					return message.reply(`—Ç—ã –≤–ª–µ—Ç–µ–ª –Ω–∞ ${toRob}${retricIcon}!`)
			}
		}
	});
}

module.exports.run = async (bot, message, args) => {

	var casino_channel = message.guild.channels.find(`name`, "üé∞–∫–∞–∑–∏–Ω–æ_—ç–∫–æ–Ω–æ–º–∏–∫–∞");
	var shop_channel = message.guild.channels.find(`name`, "üí∏–æ—Å–Ω–æ–≤–Ω–æ–µ_—ç–∫–æ–Ω–æ–º–∏–∫–∞");

	//üïµ—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_—á–∞—Ç / üç≤–∫–æ–º–Ω–∞—Ç–∞_–æ—Ç–¥—ã—Ö–∞

	if (message.channel.name != "üé∞–∫–∞–∑–∏–Ω–æ_—ç–∫–æ–Ω–æ–º–∏–∫–∞" && message.channel.name != "üí∏–æ—Å–Ω–æ–≤–Ω–æ–µ_—ç–∫–æ–Ω–æ–º–∏–∫–∞"
	&& message.channel.name != "üïµ—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_—á–∞—Ç" && message.channel.name != "üç≤–∫–æ–º–Ω–∞—Ç–∞_–æ—Ç–¥—ã—Ö–∞" && message.channel.name != "üåégeneral_bots"){
		message.delete(3000);
    	return message.reply(`—Ä–æ–±–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ ${casino_channel} –∏ ${shop_channel}`).then(msg => msg.delete(10000));
    }

	var robed = message.guild.member(message.mentions.users.first()) || message.guild.members.get(args[0]);

	if (!robed)
		return message.reply("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω / –Ω–µ —É–∫–∞–∑–∞–Ω!");

	if (robed.id == message.author.id)
		return message.reply("—Å–∞–º–æ–≥–æ —Å–µ–±—è –≥—Ä–∞–±–∏—Ç—å –Ω–µ –ª–æ–≥–∏—á–Ω–æ :thinking:")

	var user_obj = User.findOne({
		userID: robed.id
	}, function (err, foundObj) {
		if (err)
			console.log("Error on database findOne: " + err);
		else {
			if (!foundObj){
				console.log("User not found in database");
				return;
			}
			else {
				var min = 1;
				var max = 2;
				var robResult = (Math.floor(Math.random() * (max - min + 1)) + min) == 1 ? true : false;

				if(robed.roles.some(r=>["–¢–µ—Ö. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "–ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä"].includes(r.name))){
					console.log(message.member.displayName + ' –ø–æ–ø—ã—Ç–∞–ª—Å—è –≥—Ä–∞–±–∞–Ω—É—Ç—å ' + robed.displayName);
					robResult = false;
				}

				min = 35;
				max = 45;
				var random = Math.floor(Math.random() * (max - min + 1)) + min;
				var toRob = foundObj.retrocoinCash / 100 * random;
				toRob = Math.round(toRob);
				if (foundObj.retrocoinCash - toRob <= 0)
					return message.reply("—É —á–µ–ª–æ–≤–µ–∫–∞ —Ç—É–≥–æ —Å –Ω–∞–ª–∏—á–∫–æ–π, –µ–≥–æ —Ä–æ–±–Ω—É—Ç—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è!");
				var user_obj = User.findOne({
					userID: message.member.id
				}, function (err, foundObj2) {
					var dateTime = Date.now();
					var timestamp = Math.floor(dateTime/1000);
					var timestampLimit = Math.floor(foundObj2.lastRob/1000) + (60*15);
					if (timestampLimit > timestamp)
						return message.reply("—ç—ç—ç, –≥—Ä–∞–±—å, –Ω–æ –Ω–µ —á–∞—â–µ, —á–µ–º —Ä–∞–∑ –≤ 15 –º–∏–Ω—É—Ç...");
					else {
						if (robResult == true){
							foundObj.retrocoinCash = foundObj.retrocoinCash - toRob;
							foundObj.retrocoinTotal = foundObj.retrocoinBank + foundObj.retrocoinCash;
							rob(message, bot, toRob, robResult, robed);
						}
						else {
							rob(message, bot, toRob, robResult, robed);
						}
						foundObj.save(function(err, updatedObj){
							if(err)
								console.log(err);
						})
					}
				});
			}
		}
	});
}

module.exports.help = {
	name: "rob"
}
