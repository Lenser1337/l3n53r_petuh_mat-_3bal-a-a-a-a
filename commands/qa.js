const Discord = require("discord.js");
const fs = require("fs");
var mongoose = require("mongoose");
mongoose.Promise = global.Promise;
mongoose.connect(process.env.MONGO_URL);
var User = require('./../schemas/user_model.js');
var Question = require('./../schemas/question_model.js');

function random(min, max) {
	var result = Math.floor(Math.random() * (max - min + 1)) + min;
	return (result);
}

module.exports.run = async (bot, message, args) => {

  if(!message.member.roles.some(r=>["–¢–µ—Ö. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "–ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä", "üì≤–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç", "–ì–ª–∞–≤–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä"].includes(r.name)))
    return message.reply("–ø–æ—Ö–æ–∂–µ —É —Ç–µ–±—è –Ω–µ—Ö–≤–∞—Ç–∫–∞ –ø—Ä–∞–≤!").then(msg => msg.delete(10000));

  var fullstr = message.content.substring(message.content.indexOf(" ") + 1);
  var fullstrArray = fullstr.split("|");
  var questionText = fullstrArray[0];
  var answer = fullstrArray[1];

  if (!questionText || !answer)
    return message.reply("–ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Å—è —à–∞–±–ª–æ–Ω–∞ –≤–æ–ø—Ä–æ—Å|–æ—Ç–≤–µ—Ç!");

  //
  message.reply("—Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å: " + questionText).then(r => r.delete(60000)).catch(function(error) {console.log(error)});
  message.channel.send("–¢–≤–æ–π –æ—Ç–≤–µ—Ç: " + answer).then(r => r.delete(60000)).catch(function(error) {console.log(error)});
  message.channel.send("–í—Å–µ –≤–µ—Ä–Ω–æ? (–¥–∞/–Ω–µ—Ç)").then(r => r.delete(60000)).catch(function(error) {console.log(error)});

  var filter = m => m.author.id === message.author.id;
  message.channel.awaitMessages(filter, {
    max: 1,
    time: 60000
  }).then(collected => {
    if (collected.first().content == "–¥–∞" || collected.first().content == "–î–∞" || collected.first().content == "–î–ê")
      console.log("new question added by" + message.member.displayName);
    else if (collected.first().content == "–Ω–µ—Ç" || collected.first().content == "–ù–µ—Ç" || collected.first().content == "–ù–ï–¢")
      return message.reply("–Ω—É –Ω–µ—Ç —Ç–∞–∫ –Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!");
    else
      return message.reply("–Ω—É–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å **–¥–∞** –∏–ª–∏ **–Ω–µ—Ç**, –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω!");
  }).catch(err => {
    return message.reply("–≤—Ä–µ–º—è –≤—ã—à–ª–æ, –≤–æ–ø—Ä–æ—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!");
  });

  var questionID = random(0, 999999999);

  var newQuestion = new Question({
    questionID: questionID,
    createdAt: Date.now(),
    createdBy: message.member.id,
    questionText: questionText,
    expectedAnswer: answer
  });
  newQuestion.save()
  .then(item => {
    console.log('New item "'+itm+'" added to database');
  })
  .catch(err => {
    console.log("Error on database save: " + err);
  });

  var user_obj = User.findOne({userID: message.member.id}, function(err, found_user){
    if (err)
      console.log("WTF there is an error: " + err);
    else {
      if (!user_obj)
        console.log("User not found");
      else {
        var newBank = found_user.retrocoinBank + 15000;
        found_user.retrocoinBank = newBank;
        found_user.retrocoinTotal = newBank + found_user.retrocoinCash;
        found_user.save(function(err, updatedObj){
          if (err)
            console.log(err);
        });
      }
    }
  });
  message.reply("—Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É, —Ç–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ 15,000 —Ä–µ—Ç—Ä–∏–∫–æ–≤! –¢–µ–ø–µ—Ä—å –ø—É–±–ª–∏–∫—É–π –Ω–æ–≤–æ—Å—Ç—å, –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞.");
}

module.exports.help = {
  name: "qa"
}
