const Discord = require("discord.js");
const fs = require("fs");
const ms = require("ms");
var mongoose = require("mongoose");
mongoose.Promise = global.Promise;mongoose.connect(process.env.MONGO_URL);
var User = require('./../schemas/user_model.js');

function getRoles(role, index) {
	console.log("Role: " + role.name);
    var rolename = role.name;
    return rolename;
}

module.exports.run = async (bot, message) => {

	var rolesArray = message.member.roles.map(id => id.id);

	let r1 = message.guild.roles.find(`name`, "–ü—Ä–∏–µ–∑–∂–∏–π [1]");
	let r2 = message.guild.roles.find(`name`, "–ë–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π [2]");
	let r3 = message.guild.roles.find(`name`, "–í–∞–Ω–¥–∞–ª [3]");
	let r4 = message.guild.roles.find(`name`, "–£–ª–∏—á–Ω—ã–π –ø–æ–ø—Ä–æ—à–∞–π–∫–∞ [4]");
	let r5 = message.guild.roles.find(`name`, "–£–±–æ—Ä—â–∏–∫ [5]");

	let r6 = message.guild.roles.find(`name`, "–ú—É—Å–æ—Ä—â–∏–∫ [6]");
	let r7 = message.guild.roles.find(`name`, "–®–∞—Ö—Ç–µ—Ä [7]");
	let r8 = message.guild.roles.find(`name`, "–£—Ç–∏–ª–∏–∑–∞—Ç–æ—Ä [8]");
	let r9 = message.guild.roles.find(`name`, "–ü–æ—á—Ç–∞–ª—å–æ–Ω [9]");
	let r10 = message.guild.roles.find(`name`, "–ë–ª—É–¥–Ω—ã–π –º—É–∑—ã–∫–∞–Ω—Ç [10]");

	let r11 = message.guild.roles.find(`name`, "–ú–æ–π—â–∏–∫ –º–∞—à–∏–Ω [11]");
	let r12 = message.guild.roles.find(`name`, "–ö–∞—Å—Å–∏—Ä –Ω–∞ –±–µ–Ω–∑–æ–∫–æ–ª–æ–Ω–∫–µ [12]");
	let r13 = message.guild.roles.find(`name`, "–ê–ø—Ç–µ—á–Ω—ã–π —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç [13]");
	let r14 = message.guild.roles.find(`name`, "–†–∞–∑–≤–æ–∑—á–∏–∫ –ø–∏—Ü—Ü—ã [14]");
	let r15 = message.guild.roles.find(`name`, "–ü–æ—Ä—Ç–æ–≤—ã–π —Ä–∞–±–æ—á–∏–π [15]");

	let r16 = message.guild.roles.find(`name`, "–¢–∞–∫—Å–∏—Å—Ç [16]");
	let r17 = message.guild.roles.find(`name`, "–°–∫–∞—É—Ç [17]");
	let r18 = message.guild.roles.find(`name`, "–°—Ç—É–¥–µ–Ω—Ç –•–æ–≥—Ä–µ—Ç—Ä–æ—Å—Ç–∞ [18]");
	let r19 = message.guild.roles.find(`name`, "–í—ã—à–∏–±–∞–ª–∞ –≤ –±–∞—Ä–µ [19]");
	let r20 = message.guild.roles.find(`name`, "–ë–∞—Ä–º–µ–Ω [20]");

	let r21 = message.guild.roles.find(`name`, "–û—Ñ–∏—Ü–∏–∞–Ω—Ç [21]");
	let r22 = message.guild.roles.find(`name`, "–®–µ—Ñ-–ü–æ–≤–∞—Ä [22]");
	let r23 = message.guild.roles.find(`name`, "–û—Å–≤–æ–∏–≤—à–∏–π—Å—è [23]");
	let r24 = message.guild.roles.find(`name`, "–ë–∏–∑–Ω–µ—Å–º–µ–Ω - —Å–∞–º–æ—É—á–∫–∞ [24]");
	let r25 = message.guild.roles.find(`name`, "IT –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç [25]");

	let r26 = message.guild.roles.find(`name`, "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å [26]");
	let r27 = message.guild.roles.find(`name`, "–ú–∞—Ö–∏–Ω–∞—Ç–æ—Ä [27]");
	let r28 = message.guild.roles.find(`name`, "–°–µ–∫—Ä–µ—Ç–∞—Ä—å –ë–æ—Å—Å–∞ [28]");
	let r29 = message.guild.roles.find(`name`, "–û—Ñ–∏—Å–Ω—ã–π –∫–ª–µ—Ä–∫ [29]");
	let r30 = message.guild.roles.find(`name`, "–†–∞–±–æ—Ç–Ω–∏–∫ –∫—Ä—É–ø–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ [30]");

	let r31 = message.guild.roles.find(`name`, "–ë—Ä–æ–∫–µ—Ä [31]");
	let r32 = message.guild.roles.find(`name`, "–•–æ–∑—è–∏–Ω –∞–∫—Ç–∏–≤–æ–≤ [32]");
	let r33 = message.guild.roles.find(`name`, "–ú–∞–π–Ω–µ—Ä –±–∏—Ç–∫–æ–∏–Ω–∞ [33]");
	let r34 = message.guild.roles.find(`name`, "–ó–∞–≤—Å–µ–≥–¥–∞—Ç–∞–π [34]");
	let r35 = message.guild.roles.find(`name`, "–ö–æ—Ä–µ–Ω–Ω–æ–π –∂–∏—Ç–µ–ª—å [35]");

	let r36 = message.guild.roles.find(`name`, "–ö–∏–±–µ—Ä—Å–ø–æ—Ä—Ç—Å–º–µ–Ω [36]");
	let r37 = message.guild.roles.find(`name`, "–í—ã—Ö–æ–¥–µ—Ü –∏–∑ –†–µ—Ç—Ä–æ –í–µ–ª–ª–∏ [37]");
	let r38 = message.guild.roles.find(`name`, "–ü—Ä–æ–¥—é—Å–µ—Ä —Ñ–∏–ª—å–º–æ–≤ [38]");
	let r39 = message.guild.roles.find(`name`, "–ë–∏–∑–Ω–µ—Å–º–µ–Ω [39]");
	let r40 = message.guild.roles.find(`name`, "–†–æ–∂–¥–µ–Ω–Ω—ã–π –≤ –†–µ—Ç—Ä–æ –í–µ–ª–ª–∏ [40]");

	let r50 = message.guild.roles.find(`name`, "–õ–µ–≥–µ–Ω–¥–∞ [50]");

	let aktivist = message.guild.roles.find(`name`, "–ê–∫—Ç–∏–≤–∏—Å—Ç üîã");
	let samiy_aktivniy = message.guild.roles.find(`name`, "–°–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π");

	let bundar = message.guild.roles.find(`name`, "–ë—É–Ω–¥–∞—Ä—å");
	let dyta_anarhii = message.guild.roles.find(`name`, "–î–∏—Ç—è –∞–Ω–∞—Ä—Ö–∏–∏");

	var user_obj = User.findOne({
		userID: message.member.id
	}, function (err, foundObj) {
		if (err)
			console.log("Error on database findOne: " + err);
		else {
			if (!foundObj)
				console.log("–û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –ø–µ—Ä–∫–∞: –ß–µ–ª–æ–≤–µ–∫–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ!");
			else {

				//---------------------------------------------------------------------------------------------//
					//–î–∏—Ç—è –±–∞—Ç–∞—Ä–µ–π–∫–∏
				if(foundObj.messages >= 50000 && !message.member.roles.some(r=>["–°–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π"].includes(r.name))){
					message.member.addRole(samiy_aktivniy.id);
					if(message.member.roles.some(r=>["–ê–∫—Ç–∏–≤–∏—Å—Ç üîã"].includes(r.name))){
						message.member.removeRole(aktivist.id);
					}
					message.channel.send(`–¢–æ–ª—å–∫–æ —á—Ç–æ <@${message.member.id}> –ø–æ–ª—É—á–∏–ª –ø–µ—Ä–∫ –î–∏—Ç—è –±–∞—Ç–∞—Ä–µ–π–∫–∏!`);
				//---------------------------------------------------------------------------------------------//
					//–ê–∫—Ç–∏–≤–∏—Å—Ç
				} else if (foundObj.messages >= 10000 && !message.member.roles.some(r=>["–ê–∫—Ç–∏–≤–∏—Å—Ç üîã", "–°–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π"].includes(r.name))){
					message.member.addRole(aktivist.id);
					message.channel.send(`–¢–æ–ª—å–∫–æ —á—Ç–æ <@${message.member.id}> –ø–æ–ª—É—á–∏–ª –ø–µ—Ä–∫ –ê–∫—Ç–∏–≤–∏—Å—Ç!`);
				} else {
					//–≠—Ç–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–± else –Ω–µ –±—ã–ª –ø—É—Å—Ç–æ–π
					let test = "none";
				}
				//---------------------------------------------------------------------------------------------//
			}
		}
	});

	var user_obj = User.findOne({
		userID: message.member.id
	}, function (err, foundObj) {
		if (err)
			console.log("Error on database findOne: " + err);
		else {
			if (!foundObj)
				console.log("–û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –ø–µ—Ä–∫–∞: –ß–µ–ª–æ–≤–µ–∫–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ!");
			else {

				//---------------------------------------------------------------------------------------------//
					//–ê–Ω—Ç–∏–ö–æ–ø
				if(foundObj.infractions >= 2500 && !message.member.roles.some(r=>["–î–∏—Ç—è –∞–Ω–∞—Ä—Ö–∏–∏"].includes(r.name))){
					message.member.addRole(dyta_anarhii.id);
					if(message.member.roles.some(r=>["–ë—É–Ω–¥–∞—Ä—å"].includes(r.name))){
						message.member.removeRole(bundar.id);
					}
					message.channel.send(`–¢–æ–ª—å–∫–æ —á—Ç–æ <@${message.member.id}> –ø–æ–ª—É—á–∏–ª –ø–µ—Ä–∫ –ê–Ω—Ç–∏–ö–æ–ø!`);
				//---------------------------------------------------------------------------------------------//
					//–ë—É–Ω–¥–∞—Ä—å
				} else if (foundObj.infractions >= 500 && !message.member.roles.some(r=>["–ë—É–Ω–¥–∞—Ä—å", "–î–∏—Ç—è –∞–Ω–∞—Ä—Ö–∏–∏"].includes(r.name))){
					message.member.addRole(bundar.id);
					message.channel.send(`–¢–æ–ª—å–∫–æ —á—Ç–æ <@${message.member.id}> –ø–æ–ª—É—á–∏–ª –ø–µ—Ä–∫ –ë—É–Ω–¥–∞—Ä—å!`);
				} else {
					//–≠—Ç–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–± else –Ω–µ –±—ã–ª –ø—É—Å—Ç–æ–π
					let test = "none";
				}
				//---------------------------------------------------------------------------------------------//
			}
		}
	});


	var user_obj = User.findOne({
		userID: message.member.id
	}, function (err, foundObj) {
		if (err)
			console.log("Error on database findOne: " + err);
		else {
			if (foundObj === null){
				var myData = new User({
					userID: message.member.id,
					displayName: message.member.displayName,
					highestRole: message.member.highestRole.name,
					joinedAt: message.member.joinedAt,
					messages: 1,
					infractions: 0,
					retrocoinCash: 0,
					retrocoinBank: 0,
					retrocoinTotal: 0,
					kissed: 0,
					huged: 0,
					fcked: 0,
					hit: 0,
					killed: 0,
					drunk: 0,
					status: "__–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω__",
					lastScan: Date.now()
				});
				myData.save()
				.then(item => {
					console.log('New user "' + message.member.displayName + '" added to database');
				})
				.catch(err => {
					console.log("Error on database save: " + err);
				});
			}
			else {
				if (!foundObj)
					console.log("Something stange happend");
				else {
					foundObj.mainmessages++;
					var dateTime = Date.now();
					var timestamp = Math.floor(dateTime/1000);
					var timestampLimit = Math.floor(foundObj.lastScan/1000) + 60;

					//–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º—É—Ç –∏ –≤—ã–¥–∞—á–∞ —Ä–æ–ª–∏ (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —á–µ–ª –ª–∏–≤–Ω—É–ª)

					if(foundObj.mutedUntil){
						var muterole = message.guild.roles.find(`name`, "–ù–∞—Ä—É—á–Ω–∏–∫–∏ (–ú—É—Ç —á–∞—Ç–∞)");
	 					var now = new Date();
						var ts = Math.floor(now/1000);
						var tsLimit = Math.floor(foundObj.mutedUntil/1000);
						if (ts < tsLimit){
							//383183498737090571 - –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è
							if (message.channel.id != "383183498737090571"){
								message.delete().catch(O_o=>{});
								message.channel.send(`<@${message.member.id}> —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –≤—ã–¥–∞—é –µ–º—É –µ–≥–æ —á–µ—Å—Ç–Ω–æ –∑–∞—Å–ª—É–∂–µ–Ω–Ω—ã–π –∏ –≤—Å–µ –µ—â–µ –Ω–µ –ø—Ä–æ—à–µ–¥—à–∏–π –º—É—Ç!`);
								message.member.addRole(muterole.id);
							}
						}
					  else{
							if (message.member.roles.some(r=>["–ù–∞—Ä—É—á–Ω–∏–∫–∏ (–ú—É—Ç —á–∞—Ç–∞)"].includes(r.name))){
								message.member.removeRole(muterole);
							}
						}
					}

					if (timestampLimit < timestamp) {

						// var userRoles = message.member.roles.array(getRoles);
						// console.log("–†–æ–ª–∏")
						// console.log("Roles: " + message.member.roles.array(role => console.log(role.name)))

						var min = 1;
						var max = 15;
						var coinrandom = Math.floor(Math.random() * (max - min + 1)) + min;
						foundObj.messages++;
						foundObj.retrocoinBank += coinrandom;
						foundObj.retrocoinTotal = foundObj.retrocoinCash + foundObj.retrocoinBank;
						foundObj.displayName = message.member.displayName;
						foundObj.highestRole = message.member.highestRole.name;
						foundObj.roles = rolesArray;
						foundObj.lastScan = Date.now();
						foundObj.save(function(err, updatedObj){
							if(err)
								console.log(err);
						});
					}
				}
			}
		}
	});
}

module.exports.help = {
	name: "scanuser"
}
